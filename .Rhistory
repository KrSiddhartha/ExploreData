library(ExploreData)
# Setting Options and Setting the working Directory -----------------------
options(scipen = 999)
setwd("/home/kumars/Downloads/Data Sets/House Prices/Data")
# Loading the Required Libraries ------------------------------------------
suppressMessages(library(dplyr))
suppressMessages(library(Hmisc))
suppressMessages(library(rpart))
suppressMessages(library(corrplot))
suppressMessages(library(tidyverse))
suppressMessages(library(rpart.plot))
suppressMessages(library(DataExplorer))
# Reading the Input Data --------------------------------------------------
test_hp <- read.csv("test.csv", stringsAsFactors = F, na.strings = c("", NA))
train_hp <- read.csv("train.csv", stringsAsFactors = F, na.strings = c("", NA))
# Data Preparation --------------------------------------------------------
test_hp$SalePrice <- NA
hp <- rbind(train_hp, test_hp)
library(ExploreData)
library(ExploreData)
# Setting Options and Setting the working Directory -----------------------
options(scipen = 999)
setwd("/home/kumars/Downloads/Data Sets/House Prices/Data")
# Loading the Required Libraries ------------------------------------------
suppressMessages(library(dplyr))
suppressMessages(library(Hmisc))
suppressMessages(library(rpart))
suppressMessages(library(corrplot))
suppressMessages(library(tidyverse))
suppressMessages(library(rpart.plot))
suppressMessages(library(DataExplorer))
# Reading the Input Data --------------------------------------------------
test_hp <- read.csv("test.csv", stringsAsFactors = F, na.strings = c("", NA))
train_hp <- read.csv("train.csv", stringsAsFactors = F, na.strings = c("", NA))
# Data Preparation --------------------------------------------------------
test_hp$SalePrice <- NA
hp <- rbind(train_hp, test_hp)
library(devtools)
install_github("KrSiddhartha/ExploreData")
library(ExploreData)
library(ExploreData)
library(ExploreData)
library(ExploreData)
library(ExploreData)
library(ExploreData)
library(ExploreData)
library(ExploreData)
library(ExploreData)
library(devtools)
install_github("KrSiddhartha/ExploreData")
library(ExploreData)
library(ExploreData)
remove.packages(ExploreData)
remove.packages("ExploreData")
library(ExploreData)
library(devtools)
install_github("KrSiddhartha/ExploreData")
library(devtools)
install_github("KrSiddhartha/ExploreData")
library(ExploreData)
# Setting Options and Setting the working Directory -----------------------
options(scipen = 999)
setwd("/home/kumars/Downloads/Data Sets/House Prices/Data")
# Loading the Required Libraries ------------------------------------------
suppressMessages(library(dplyr))
suppressMessages(library(Hmisc))
suppressMessages(library(rpart))
suppressMessages(library(corrplot))
suppressMessages(library(tidyverse))
suppressMessages(library(rpart.plot))
suppressMessages(library(DataExplorer))
# Reading the Input Data --------------------------------------------------
test_hp <- read.csv("test.csv", stringsAsFactors = F, na.strings = c("", NA))
train_hp <- read.csv("train.csv", stringsAsFactors = F, na.strings = c("", NA))
# Data Preparation --------------------------------------------------------
test_hp$SalePrice <- NA
hp <- rbind(train_hp, test_hp)
# Defined Functions -------------------------------------------------------
source("/home/kumars/Downloads/Data Sets/R_Scripts_Universal/missing_eval.R")
source("/home/kumars/Downloads/Data Sets/R_Scripts_Universal/mixed_var_cor.R")
source("/home/kumars/Downloads/Data Sets/R_Scripts_Universal/univariate_exploration.R")
# Missing Value Treatment -------------------------------------------------
missing_train <- missing_eval(hp)
hp$PoolQC[is.na(hp$PoolQC)] <- "NP"
hp$MiscFeature[is.na(hp$MiscFeature)] <- "NONE"
hp$Alley[is.na(hp$Alley)] <- "NP"
hp$Fence[is.na(hp$Fence)] <- "NP"
hp$FireplaceQu[is.na(hp$FireplaceQu)] <- "NP"
hp$GarageType[is.na(hp$GarageType)] <- "NP"
hp$GarageYrBlt[is.na(hp$GarageYrBlt)] <- 9999
hp$GarageFinish[is.na(hp$GarageFinish)] <- "NP"
hp$GarageQual[is.na(hp$GarageQual)] <- "NP"
hp$GarageCars[is.na(hp$GarageCars)] <- 0
hp$GarageArea[is.na(hp$GarageArea)] <- 0
hp$GarageCond <- NULL
hp$BsmtExposure[is.na(hp$BsmtExposure)] <- "NP"
hp$BsmtFinType1[is.na(hp$BsmtFinType1)] <- "NP"
hp$BsmtFinType2[is.na(hp$BsmtFinType2)] <- "NP"
hp$BsmtQual[is.na(hp$BsmtQual)] <- "NP"
hp$BsmtFinSF1[is.na(hp$BsmtFinSF1)] <- 0
hp$BsmtFinSF2[is.na(hp$BsmtFinSF2)] <- 0
hp$BsmtUnfSF[is.na(hp$BsmtUnfSF)] <- 0
hp$TotalBsmtSF[is.na(hp$TotalBsmtSF)] <- 0
hp$BsmtFullBath[is.na(hp$BsmtFullBath)] <- 0
hp$BsmtHalfBath[is.na(hp$BsmtHalfBath)] <- 0
hp$BsmtCond <- NULL
hp$Electrical[is.na(hp$Electrical)] <- "SBrkr"
hp$MasVnrType[is.na(hp$MasVnrType)] <- "None"
hp$MasVnrArea[is.na(hp$MasVnrArea)] <- 0
# Logistic Regression for Missing Value Imputation for LotFrontage --------
hp$Lot_Conf_SH <- paste(hp$LotConfig, hp$LotShape, sep = "_")
lot_median <- aggregate(hp$LotFrontage[is.na(hp$LotFrontage) == F], list(hp$Lot_Conf_SH[is.na(hp$LotFrontage) == F]), median, na.rm =T)
lot <- subset.data.frame(hp, select = c(Id, LotArea, LotFrontage, Lot_Conf_SH))
lot_tr <- filter(lot, is.na(lot$LotFrontage) == F)
lot_tst <- filter(lot, is.na(lot$LotFrontage) == T)
mod1 <- glm(LotFrontage~LotArea, data = lot_tr)
# summary(mod1)
#
# lot_tr$Pred <- predict(mod1, newdata = lot_tr)
# lot_tr$Diff <- round(lot_tr$LotFrontage - lot_tr$Pred, 2)
#
# lot_tr$Median_Replacement <- lot_median$x[match(lot_tr$Lot_Conf_SH, lot_median$Group.1)]
# lot_tr$Median_Diff <- round(lot_tr$LotFrontage - lot_tr$Median_Replacement, 2)
#
# quantile(lot_tr$Diff, probs = seq(0,1,0.1))
# quantile(lot_tr$Median_Diff, probs = seq(0,1,0.1))
lot_tst$LotFrontage <- predict(mod1, newdata = lot_tst)
lot_tst$LotFrontage <- round(lot_tst$LotFrontage, 0)
lot <- rbind(lot_tst, lot_tr)
hp$LotFrontage <- lot$LotFrontage[match(hp$Id, lot$Id)]
hp$Lot_Conf_SH <- NULL
rm(lot, lot_median, lot_tr, lot_tst, mod1)
gc()
correlate(hp)
summary(correlate(hp))
cor_hp <- correlate(hp)
View(cor_hp)
cor_hp
cor_hp$correlation
cor_hp$correlation
cor_hp$p.value
cor_hp$sample.size
cor_hp$tiesProblem
cov_mixed(hp)
library("ExploreData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
